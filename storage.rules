rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Security functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isValidPdf() {
      return request.resource.contentType == 'application/pdf';
    }
    function isValidImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidSize() {
      return request.resource.size < 50 * 1024 * 1024; // 50MB max
    }
    
    // Employee documents - authenticated users only
    match /employees/{docId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
        && isValidSize()
        && (
          (isValidPdf() && (fileName == 'qidPdf.pdf' || fileName == 'passportPdf.pdf'))
          || (isValidImage() && (fileName == 'profile.jpg' || fileName == 'profile.png' || fileName == 'profile.webp'))
        );
      allow delete: if isAuthenticated();
    }
    
    // Temporary employee documents - authenticated users only  
    match /temporaryEmployees/{docId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
        && isValidSize()
        && (
          (isValidPdf() && (fileName == 'qidPdf.pdf' || fileName == 'passportPdf.pdf'))
          || (isValidImage() && (fileName == 'profile.jpg' || fileName == 'profile.png' || fileName == 'profile.webp'))
        );
      allow delete: if isAuthenticated();
    }
    
    // User-specific documents (future enhancement)
    match /users/{userId}/documents/{document} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidSize();
      allow delete: if isOwner(userId);
    }
    
    // Deny all other paths
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
